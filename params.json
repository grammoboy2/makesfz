{"name":"makesfz","tagline":"bash script to auto-generate SFZ files","body":"# makesfz\r\n\r\nInspired by danboid's original makesfz.sh script http://www.remastersys.com/forums/index.php?topic=1951.0\r\n\r\nBy default, running makesfz with no arguments creates individual SFZ files for every WAV file found in the current directory. Samples are mapped across the entire keyboard with pitch_keycenter set to MIDI key C4 (middle C).\r\n\r\nAlternatively, running 'makesfz -s' creates a single SFZ file named after the current directory. Each WAV file found is mapped to its own MIDI key, by default starting at C4. The file name can be set with the -n option.\r\n\r\nThe script allows a key range and the \"key center\" to be specified, a specific MIDI channel can be set, and WAV, FLAC, or OGG files can be used. Keys can be specified either by name (C-1 - G9, # or b allowed) or by MIDI key number (0 - 127).\r\n\r\nFor example, to set a key range from C2 - C5:\r\n\r\n    makesfz --lk C2 --hk C5\r\n\r\nTo create a single SFZ where the first sample starts on C3 and \"one shot\" is required:\r\n\r\n    makesfz -s -k C3 -1\r\n\r\nAudio files can be treated as indiviual instruments or as instrument layers grouped either by sub-directory or by file name with numeric prefixes/suffixes indicating the layers.\r\n\r\nFor example, if the \"layer marker\" is set to \"prefix\":\r\n\r\n    00 kick1.flac\r\n    01 kick1.flac\r\n    02 kick1.flac\r\n    03 kick1.flac\r\n\r\nbecome layers of kick1, and\r\n\r\n    1_kick2.flac\r\n    2_kick2.flac\r\n    3_kick2.flac\r\n    4_kick2.flac\r\n\r\nbecome layers of kick2.\r\n\r\nTo scan for files inside a directory, pass the directory name to makesfz like so: \r\n\r\n    makesfz -- 'dir name'\r\n\r\nTo scan for files grouped by sub-directory inside a directory use: \r\n\r\n    makesfz --layers dirs -- 'dir name'\r\n\r\nOptions to reverse the sort order and to run the script in \"interactive mode\" are also available. To see the full list of options:\r\n\r\n    makesfz -h\r\n\r\nFor convenience of use, place the script in a directory included in the PATH environment variable (e.g. /usr/bin or /usr/local/bin).\r\n\r\nmakesfz requires bash v4.\r\n\r\n***\r\n\r\n\r\n# Make SFZ\r\n\r\nThis is a Nautilus script to invoke makesfz. Any selected files will be passed as arguments to makesfz.\r\nThe script assumes that makesfz is installed in a directory included in the PATH environment variable (e.g. /usr/bin, /usr/local/bin) and that xterm is available.\r\n\r\nNear the top of the script are variables that may be modified if you need to specify the file path of makesfz or if you wish to use a terminal emulator other than xterm:\r\n\r\n    MAKESFZ_PATH=\"makesfz\"\r\n    TERMINAL_COMMAND=\"xterm -hold -title MakeSFZ -font 9x15 -e\"\r\n\r\nPlace the script in the Nautilus scripts directory, e.g. '~/.gnome2/nautilus-scripts'. If Nautilus Scripts Manager is installed, place the script in '/usr/share/nautilus-scripts'.\r\n\r\n***\r\n\r\n\r\n# makesfz.desktop\r\n\r\nKDE service menu .desktop file to invoke makesfz. It assumes that makesfz is installed in a directory included in the PATH environment variable (e.g. /usr/bin, /usr/local/bin).\r\n\r\nPlace the .desktop file in one of the service menu directories, e.g. '/usr/share/services/ServiceMenus'.\r\n\r\nYou can find the location of all service directories like so:\r\n\r\n    kde4-config --path services\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}